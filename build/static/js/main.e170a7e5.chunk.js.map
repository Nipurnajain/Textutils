{"version":3,"sources":["components/About.js","components/Navbar.js","components/Textform.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["About","props","myStyle","color","mode","backgroundColor","border","borderColor","className","style","id","type","data-bs-toggle","data-bs-target","aria-expanded","aria-controls","aria-labelledby","data-bs-parent","Navbar","to","title","aria-label","aria-current","Abouttext","placeholder","onClick","toggleMode","role","htmlFor","Textform","useState","text","setText","Color","heading","rows","value","onChange","event","console","log","target","disabled","length","newtext","toUpperCase","showAlert","toLowerCase","split","filter","element","defaultProps","Alert","height","alert","msg","App","setMode","setAlert","message","setTimeout","document","body","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e170a7e5.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nexport default function About(props) {\r\n  //const [myStyle, setMyStyle ] = useState({\r\n  // color: \"white\",\r\n  //backgroundColor: \"black\",\r\n  //});\r\n  let myStyle = {\r\n    color: props.mode === \"dark\" ? \"white\" : \"black\",\r\n    backgroundColor: props.mode === \"dark\" ? \"#042743\" : \"white\",\r\n    border: \"0.5px solid\",\r\n    borderColor: \"white\",\r\n  };\r\n\r\n  return (\r\n    <div className=\"container my-3\">\r\n      <h2\r\n        className=\"my-2 \"\r\n        style={{ color: props.mode === \"dark\" ? \"white\" : \"black\" }}\r\n      >\r\n        About us\r\n      </h2>\r\n\r\n      <div className=\"accordion\" id=\"accordionExample\" style={myStyle}>\r\n        <div className=\"accordion-item\" style={myStyle}>\r\n          <h2 className=\"accordion-header\" id=\"headingOne\">\r\n            <button\r\n              className=\"accordion-button\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseOne\"\r\n              aria-expanded=\"true\"\r\n              aria-controls=\"collapseOne\"\r\n              style={myStyle}\r\n            >\r\n              <strong>Analyse your text</strong>\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseOne\"\r\n            className=\"accordion-collapse collapse show\"\r\n            aria-labelledby=\"headingOne\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\" style={myStyle}>\r\n              Textutils gives ou a way to analyse your text quickly and\r\n              efficiently be it word count or copying your text.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"accordion-item\" style={myStyle}>\r\n          <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n            <button\r\n              className=\"accordion-button collapsed\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseTwo\"\r\n              aria-expanded=\"false\"\r\n              aria-controls=\"collapseTwo\"\r\n              style={myStyle}\r\n            >\r\n              <strong>Free to use</strong>\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseTwo\"\r\n            className=\"accordion-collapse collapse\"\r\n            aria-labelledby=\"headingTwo\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\" style={myStyle}>\r\n              <strong>This is the second item's accordion body.</strong> It is\r\n              hidden by default, until the collapse plugin adds the appropriate\r\n              classes that we use to style each element. These classes control\r\n              the overall appearance, as well as the showing and hiding via CSS\r\n              transitions. You can modify any of this with custom CSS or\r\n              overriding our default variables. It's also worth noting that just\r\n              about any HTML can go within the <code>.accordion-body</code>,\r\n              though the transition does limit overflow.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"accordion-item\" style={myStyle}>\r\n          <h2 className=\"accordion-header\" id=\"headingThree\">\r\n            <button\r\n              className=\"accordion-button collapsed\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseThree\"\r\n              aria-expanded=\"false\"\r\n              aria-controls=\"collapseThree\"\r\n              style={myStyle}\r\n            >\r\n              <strong>Browser compatible</strong>\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseThree\"\r\n            className=\"accordion-collapse collapse\"\r\n            aria-labelledby=\"headingThree\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\" style={myStyle}>\r\n              <strong>This is the third item's accordion body.</strong> It is\r\n              hidden by default, until the collapse plugin adds the appropriate\r\n              classes that we use to style each element. These classes control\r\n              the overall appearance, as well as the showing and hiding via CSS\r\n              transitions. You can modify any of this with custom CSS or\r\n              overriding our default variables. It's also worth noting that just\r\n              about any HTML can go within the <code>.accordion-body</code>,\r\n              though the transition does limit overflow.\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"container my-3\"></div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n    >\r\n      <div className=\"container-fluid\">\r\n        <Link className=\"navbar-brand\" to=\"/\">\r\n        {props.title}\r\n        </Link>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">\r\n              Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link active\" aria-current=\"page\" to=\"/about\">\r\n              {props.Abouttext}\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n          <form className=\"d-flex\">\r\n            <input\r\n              className=\"form-control me-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <button className=\"btn btn-outline-primary\" type=\"submit\">\r\n              Search\r\n            </button>\r\n          </form>\r\n          <div\r\n            className={`form-check form-switch mx-2 text-${\r\n              props.mode === \"light\" ? \"dark\" : \"light\"\r\n            }`}\r\n          >\r\n            <input\r\n              className=\"form-check-input\"\r\n              onClick={props.toggleMode}\r\n              type=\"checkbox\"\r\n              role=\"switch\"\r\n              id=\"flexSwitchCheckDefault\"\r\n            />\r\n            <label\r\n              className=\"form-check-label\"\r\n              htmlFor=\"flexSwitchCheckDefault\"\r\n            >\r\n              Enable dark mode\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\nNavbar.propTypes = { title: PropTypes.string, Abouttext: PropTypes.string };\r\nNavbar.defaultProps = {\r\n  title: \"set the title here\",\r\n  Abouttext: \"about text here\",\r\n};\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  Abouttext: PropTypes.string,\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\n\r\nexport default function Textform(props) {\r\n  const handleupclick = () => {\r\n    console.log(\"uppercase was clicked\" + text);\r\n    let newtext = text.toUpperCase();\r\n    setText(newtext);\r\n    props.showAlert(\"text converted to uppercasecase\", \"success\");\r\n  };\r\n  const handleloclick = () => {\r\n    console.log(\"lowercase was clicked\" + text);\r\n    let newtext = text.toLowerCase();\r\n    setText(newtext);\r\n    props.showAlert(\"text converted to lowercase\", \"success\");\r\n  };\r\n  const handleclearclick = () => {\r\n    console.log(\"lowercase was clicked\" + text);\r\n    let newtext = \"\";\r\n    setText(newtext);\r\n    props.showAlert(\"text cleared\", \"success\");\r\n  };\r\n  const handleonChange = (event) => {\r\n    console.log(\"on change\");\r\n    setText(event.target.value);\r\n  };\r\n  const [text, setText] = useState(\"\");\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"container\"\r\n        style={{ Color: props.mode === \"dark\" ? \"white\" : \"black\" }}\r\n      >\r\n        <h1>{props.heading}</h1>\r\n        <div className=\" container my-3\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            id=\"mybox\"\r\n            rows=\"8\"\r\n            value={text}\r\n            onChange={handleonChange}\r\n            style={{\r\n              backgroundColor: props.mode === \"dark\" ? \"#042743\" : \"white\",\r\n              color: props.mode === \"dark\" ? \"white\" : \"black\",\r\n            }}\r\n          ></textarea>\r\n        </div>\r\n        <button\r\n          disabled={text.length === 0}\r\n          className=\"btn-primary mx-1 my-1\"\r\n          onClick={handleupclick}\r\n        >\r\n          convert to uppercase\r\n        </button>\r\n        <button\r\n          disabled={text.length === 0}\r\n          className=\"btn-primary mx-2 my-1\"\r\n          onClick={handleloclick}\r\n        >\r\n          convert to lowercase\r\n        </button>\r\n        <button\r\n          disabled={text.length === 0}\r\n          className=\"btn-primary my-1\"\r\n          onClick={handleclearclick}\r\n        >\r\n          clear text\r\n        </button>\r\n      </div>\r\n      <div\r\n        className=\"container my-2\"\r\n        style={{ color: props.mode === \"dark\" ? \"white\" : \"black\" }}\r\n      >\r\n        <h2>Your text summary</h2>\r\n        <p>\r\n          {\r\n            text.split(\" \").filter((element) => {\r\n              return element.length !== 0;\r\n            }).length\r\n          }{\" \"}\r\n          words and {text.length} characters\r\n        </p>\r\n        <p>\r\n          {0.008 *\r\n            text.split(\" \").filter((element) => {\r\n              return element.length !== 0;\r\n            }).length}{\" \"}\r\n          minutes read\r\n        </p>\r\n        <h2>Preview</h2>\r\n        <p>{text.length > 0 ? text : \"Nothing to preview\"}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nfunction Alert(props) {\r\n  return (\r\n     <div className= \"my-3\" style={{height:\"50px\"}}>\r\n      { props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} \r\n     role=\"alert\"\r\n      >\r\n        <strong>{props.alert.type}</strong>:{props.alert.msg}\r\n      </div>}\r\n     </div>\r\n    )\r\n}\r\nexport default Alert;\r\n","import \"./App.css\";\nimport About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport React, { useState } from \"react\";\nimport Textform from \"./components/Textform\";\nimport Alert from \"./components/Alert\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 3000);\n  };\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#042743\";\n      document.body.style.Color = \"white\";\n      showAlert(\"Dark mode is enabled\", \"success\");\n      document.title = \"Textutils-dark mode\";\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light mode is enabled\", \"primary\");\n      document.title = \"Textutils-light mode\";\n    }\n  };\n  return (\n    <>\n      <Router>\n        <Navbar\n          title=\"Textutils\"\n          Abouttext=\"About\"\n          mode={mode}\n          toggleMode={toggleMode}\n        />\n        <Alert alert={alert} />\n        <div className=\"container my-3 mb-4\">\n          <Switch>\n            <Route exact path=\"/about\">\n              <About mode={mode} />\n            </Route>\n            <Route exact path=\"/\">\n              <Textform\n                showAlert={showAlert}\n                heading=\" TryTextutils-Word counter, Character counter, Remove extra spaces \"\n                mode={mode}\n              />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}